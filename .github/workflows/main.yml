name: Deploy Kubernetes

on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Run tests
        run: make test

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      ecr_registry: 288761732111.dkr.ecr.us-east-1.amazonaws.com
      ecr_repository: restapi-ecr

    steps:
      - uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        with:
          role-to-assume: arn:aws:iam::288761732111:role/restapi-gh-actions-oidc-role
          role-session-name: github-actions-restapi
          aws-region: us-east-1

      - name: Build Docker image
        run: |
          aws sts get-caller-identity

          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${ecr_registry}

          sha=${{ github.sha }}
          short_sha=${sha:0:7}

          docker build -t ${ecr_registry}/${ecr_repository}:dev-${short_sha} .
          docker push ${ecr_registry}/${ecr_repository}:dev-${short_sha}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        with:
          role-to-assume: arn:aws:iam::288761732111:role/restapi-gh-actions-oidc-role
          role-session-name: github-actions-restapi
          aws-region: us-east-1
      - name: Deploy to Kubernetes
        run: |
          aws eks --region us-east-1 update-kubeconfig --name restapi-cluster

          kubectl get node